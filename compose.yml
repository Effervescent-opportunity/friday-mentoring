version: "3.9"
services:
  serviceA:
    volumes:
      - db-data:/etc/data
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: fm-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
  kafka:
    image: confluentinc/cp-kafka:7.4.1
    container_name: fm-kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_REQUEST_TIMEOUT_MS: 2000
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    container_name: fm-kafka-ui
    ports:
      - "8090:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - LOGGING_LEVEL_COM_PROVECTUS=warn
      - LOGGING_LEVEL_ROOT=warn
    links:
      - kafka
      - zookeeper
  postgres:
    image: postgres:15.4-alpine3.18
    container_name: fm-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=fmdb
      - POSTGRES_USER=lalala
      - POSTGRES_PASSWORD=lalala
#      todo wtf - volumes & tune db https://habr.com/ru/articles/578744/ https://habr.com/ru/articles/490824/
#      - PGDATA=/var/lib/postgresql/data/pgdata
#    volumes:
#      - ../2. Init Database:/docker-entrypoint-initdb.d
#      - habrdb-data:/var/lib/postgresql/data